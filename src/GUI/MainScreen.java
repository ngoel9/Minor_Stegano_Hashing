/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package GUI;

import java.awt.Dimension;
import java.awt.PopupMenu;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
//import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import javax.imageio.ImageIO;
//import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
//import javax.swing.JFrame;
//import javax.swing.JLabel;
import javax.swing.JOptionPane;
//import javax.swing.JPanel;
import javax.swing.filechooser.FileFilter;
import logic.StegPSNR;
import logic.SteganoApp;
/**
 *
 * @author Nitin
 */
public class MainScreen extends javax.swing.JFrame {
    private PopupMenu ImageIcon;

    /**
     * Creates new form MainScreen
     */
    public MainScreen() {
        initComponents();
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/GUI/icn.jpg")));
        PanelEncode.setVisible(false);
        PanelDecode.setVisible(false);
        editMenu1.setEnabled(false);
        Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
        int wid = (int) d.getWidth();
        int h=(int) d.getHeight();
        PanelEncode.setSize((int)(wid*0.70),(int) (h*0.70));
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PanelEncode = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAreaData = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        ImgChoose = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtfldchooseimg = new javax.swing.JTextField();
        imgoutpath = new javax.swing.JTextField();
        ImgChoose1 = new javax.swing.JButton();
        ButtonEncode = new javax.swing.JButton();
        lblPic = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtfilechooser = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        size = new javax.swing.JLabel();
        width = new javax.swing.JLabel();
        height = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        imgName = new javax.swing.JLabel();
        PanelDecode = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtFldFile = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtAreainfo = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        buttonDecode = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem3 = new javax.swing.JMenuItem();
        editMenu1 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Welcome..!! - Steganogarphy in Image Files");
        setBackground(new java.awt.Color(255, 255, 255));
        getContentPane().setLayout(null);

        PanelEncode.setBackground(new java.awt.Color(255, 255, 153));
        PanelEncode.setToolTipText("");
        PanelEncode.setLayout(null);

        jLabel1.setText("Enter a Text to be Encode in a Image File");
        PanelEncode.add(jLabel1);
        jLabel1.setBounds(20, 10, 210, 14);

        txtAreaData.setColumns(20);
        txtAreaData.setRows(5);
        txtAreaData.setText("fnfkwfw");
        jScrollPane1.setViewportView(txtAreaData);

        PanelEncode.add(jScrollPane1);
        jScrollPane1.setBounds(20, 30, 460, 210);

        jLabel2.setText("Choose a Image");
        PanelEncode.add(jLabel2);
        jLabel2.setBounds(20, 260, 100, 30);

        ImgChoose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/iconchooser.jpg"))); // NOI18N
        ImgChoose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ImgChooseActionPerformed(evt);
            }
        });
        PanelEncode.add(ImgChoose);
        ImgChoose.setBounds(340, 260, 30, 30);

        jLabel4.setText("Image Destination Path");
        PanelEncode.add(jLabel4);
        jLabel4.setBounds(20, 300, 130, 30);

        txtfldchooseimg.setEditable(false);
        txtfldchooseimg.setText("D:\\a.jpg");
        PanelEncode.add(txtfldchooseimg);
        txtfldchooseimg.setBounds(160, 260, 160, 30);

        imgoutpath.setEditable(false);
        imgoutpath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imgoutpathActionPerformed(evt);
            }
        });
        PanelEncode.add(imgoutpath);
        imgoutpath.setBounds(160, 300, 160, 30);

        ImgChoose1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/iconchooser.jpg"))); // NOI18N
        ImgChoose1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ImgChoose1ActionPerformed(evt);
            }
        });
        PanelEncode.add(ImgChoose1);
        ImgChoose1.setBounds(340, 300, 30, 30);

        ButtonEncode.setText("Encode");
        ButtonEncode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonEncodeActionPerformed(evt);
            }
        });
        PanelEncode.add(ButtonEncode);
        ButtonEncode.setBounds(160, 350, 80, 30);

        lblPic.setBackground(new java.awt.Color(255, 255, 255));
        lblPic.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPic.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        PanelEncode.add(lblPic);
        lblPic.setBounds(530, 60, 220, 220);

        jLabel7.setText("Choose Text File");
        PanelEncode.add(jLabel7);
        jLabel7.setBounds(540, 20, 120, 30);

        txtfilechooser.setText("....");
        txtfilechooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfilechooserActionPerformed(evt);
            }
        });
        PanelEncode.add(txtfilechooser);
        txtfilechooser.setBounds(660, 20, 40, 23);

        jLabel8.setText("Width");
        PanelEncode.add(jLabel8);
        jLabel8.setBounds(530, 320, 60, 20);

        jLabel9.setText("Height");
        PanelEncode.add(jLabel9);
        jLabel9.setBounds(530, 350, 60, 20);

        jLabel10.setText("Size");
        PanelEncode.add(jLabel10);
        jLabel10.setBounds(530, 380, 60, 20);

        size.setText("..........");
        PanelEncode.add(size);
        size.setBounds(600, 380, 180, 20);

        width.setText("..........");
        PanelEncode.add(width);
        width.setBounds(600, 320, 50, 20);

        height.setText("..........");
        PanelEncode.add(height);
        height.setBounds(600, 350, 50, 20);

        jLabel11.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        PanelEncode.add(jLabel11);
        jLabel11.setBounds(730, 310, 100, 100);

        imgName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        imgName.setText(".....");
        PanelEncode.add(imgName);
        imgName.setBounds(530, 290, 220, 30);

        getContentPane().add(PanelEncode);
        PanelEncode.setBounds(0, 0, 930, 440);

        PanelDecode.setBackground(new java.awt.Color(255, 255, 153));
        PanelDecode.setLayout(null);

        jLabel3.setText("Choose Image");
        PanelDecode.add(jLabel3);
        jLabel3.setBounds(70, 34, 100, 40);

        txtFldFile.setEditable(false);
        txtFldFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFldFileActionPerformed(evt);
            }
        });
        PanelDecode.add(txtFldFile);
        txtFldFile.setBounds(170, 40, 190, 30);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/iconchooser.jpg"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        PanelDecode.add(jButton2);
        jButton2.setBounds(380, 40, 30, 30);

        txtAreainfo.setColumns(20);
        txtAreainfo.setRows(5);
        jScrollPane2.setViewportView(txtAreainfo);

        PanelDecode.add(jScrollPane2);
        jScrollPane2.setBounds(70, 160, 510, 190);

        jLabel5.setText("Information Encoded in Image");
        PanelDecode.add(jLabel5);
        jLabel5.setBounds(70, 140, 210, 14);

        buttonDecode.setText("Decode");
        buttonDecode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDecodeActionPerformed(evt);
            }
        });
        PanelDecode.add(buttonDecode);
        buttonDecode.setBounds(170, 90, 90, 23);

        getContentPane().add(PanelDecode);
        PanelDecode.setBounds(0, 0, 890, 440);

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/key image.jpg"))); // NOI18N
        getContentPane().add(jLabel12);
        jLabel12.setBounds(340, 150, 310, 150);

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/phd_square.png"))); // NOI18N
        getContentPane().add(jLabel6);
        jLabel6.setBounds(0, 0, 980, 550);

        jMenu1.setText("File");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Encryption");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("Decryption");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);
        jMenu1.add(jSeparator1);

        jMenuItem3.setText("Close");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        editMenu1.setText("Edit");

        jMenuItem4.setText("Calculate PSNR");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        editMenu1.add(jMenuItem4);

        jMenuItem5.setText("max limit");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        editMenu1.add(jMenuItem5);

        jMenuBar1.add(editMenu1);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        PanelEncode.setVisible(true);
        PanelDecode.setVisible(false);
        Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
        int wid = (int) d.getWidth();
        int h=(int) d.getHeight();
        PanelEncode.setSize((int)(wid*0.70),(int) (h*0.70));
        editMenu1.setEnabled(false);
        txtAreaData.setText("");
        txtfldchooseimg.setText("");
        imgoutpath.setText("");
        width.setText("....");
        height.setText("....");
        size.setText("....");
        imgName.setText(".......");
        lblPic.setIcon(null);
        jLabel11.setIcon(null);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        PanelDecode.setVisible(true);
        editMenu1.setEnabled(false);
        PanelEncode.setVisible(false);
        Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
        int wid = (int) d.getWidth();
        int h=(int) d.getHeight();
        PanelDecode.setSize((int)(wid*0.70),(int) (h*0.70));
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
           System.exit(0);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void ImgChooseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ImgChooseActionPerformed
        JFileChooser jfc;
        try {
            jfc = new JFileChooser();
            jfc.setAcceptAllFileFilterUsed(false);
            jfc.addChoosableFileFilter(new FileFilter() {
                    public String getDescription()
                    {
                        return "Image File (*.png)";
                    }
                    public boolean accept(File f)
                    {
                        if(f.isDirectory())
                        {
                            return true;
                        }
                        else
                        {
                            String temp=f.getName().toLowerCase();
                            return  temp.endsWith(".png");
                        }
                    }
            });
            jfc.showOpenDialog(this);
           // FileInputStream fis=new FileInputStream(jfc.getSelectedFile());
          //  byte b[]=new byte[fis.available()];
          //  fis.read(b);
           // ImageIcon ii=new ImageIcon(b);
           // lblPic.setIcon(new ImageIcon(ii.getImage().getScaledInstance(lblPic.getHeight(), lblPic.getWidth(), java.awt.Image.SCALE_SMOOTH)));
            File fi=jfc.getSelectedFile();
            String path=fi.getPath();
           // JOptionPane.showMessageDialog(null, path);
            txtfldchooseimg.setText(path);
            imgName.setText(fi.getName().toLowerCase());
            BufferedImage image=ImageIO.read(fi);
            ImageIcon ii=new ImageIcon(image);
            lblPic.setIcon(new ImageIcon(ii.getImage().getScaledInstance(lblPic.getHeight(), lblPic.getWidth(), java.awt.Image.SCALE_SMOOTH)));
            int w=image.getWidth();
            int h=image.getHeight();
            double si=(fi.length())/(1024);
            width.setText(Integer.toString(w));
            height.setText(Integer.toString(h));
            size.setText(Double.toString(si)+" KB");
            image.flush();
        } catch (Exception e) {
        }
    }//GEN-LAST:event_ImgChooseActionPerformed

    private void imgoutpathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imgoutpathActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_imgoutpathActionPerformed

    private void ImgChoose1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ImgChoose1ActionPerformed
        JFileChooser jfc;
        try {
            jfc = new JFileChooser();
            jfc.setDialogTitle("Save As");
            jfc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            jfc.setAcceptAllFileFilterUsed(false);
            jfc.showOpenDialog(this);
           // FileInputStream fis=new FileInputStream(jfc.getSelectedFile());
            File fi=jfc.getSelectedFile();
            imgoutpath.setText(fi.getPath());
        } catch (Exception e) {
        }
    }//GEN-LAST:event_ImgChoose1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        JFileChooser jfc;
        try {
            jfc = new JFileChooser();
            jfc.setAcceptAllFileFilterUsed(false);
            jfc.addChoosableFileFilter(new FileFilter() {
                    @Override
                    public String getDescription()
                    {
                        return "Image File (*.jpg,*.jpeg,*.png)";
                    }
                    @Override
                    public boolean accept(File f)
                    {
                        if(f.isDirectory())
                        {
                            return true;
                        }
                        else
                        {
                            String temp=f.getName().toLowerCase();
                            return temp.endsWith(".jpg") || temp.endsWith(".jpeg") || temp.endsWith(".png");
                        }
                    }
            });
            jfc.showOpenDialog(this);
            File fil=jfc.getSelectedFile();
            txtFldFile.setText(fil.getPath());//(fil.getName().toLowerCase());
        } 
        catch (Exception e) {
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txtfilechooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfilechooserActionPerformed
        JFileChooser jfc;
        try {
            jfc = new JFileChooser();
            jfc.setDialogTitle("Choose Text File");
            jfc.setAcceptAllFileFilterUsed(false);
            jfc.addChoosableFileFilter(new FileFilter() {
                    public String getDescription()
                    {
                        return "Text File(*.txt)";
                    }
                    public boolean accept(File f)
                    {
                        if(f.isDirectory())
                        {
                            return true;
                        }
                        else
                        {
                            String temp=f.getName().toLowerCase();
                            return temp.endsWith(".txt");
                        }
                    }
            });
            jfc.showOpenDialog(this);
            File fi=jfc.getSelectedFile();
            InputStream in= new FileInputStream(fi);
            BufferedReader br=new BufferedReader(new InputStreamReader(in));
            String line;
            txtAreaData.setText("");
	    while ((line = br.readLine()) != null) {
	        txtAreaData.append(line+"\r\n");
	    }
            br.close();
        }
        catch(Exception e){}
    }//GEN-LAST:event_txtfilechooserActionPerformed

    private void ButtonEncodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonEncodeActionPerformed
        try{
            if(txtfldchooseimg.getText().equals("") || imgoutpath.getText().equals("") || txtAreaData.getText().equals(""))
            {
                JOptionPane.showMessageDialog(null, "Complete all the fields", "Error!!", JOptionPane.ERROR_MESSAGE);
            }
            else
            {
                BufferedImage img=null;
                BufferedImage img1=null;
                String data=txtAreaData.getText();
                String pathofImg=txtfldchooseimg.getText();
                File f=new File(pathofImg);
                img= ImageIO.read(f);
                img1=new SteganoApp().insertText(data, img);
                ImageIcon ii=new ImageIcon(img1);
                jLabel11.setIcon(new ImageIcon(ii.getImage().getScaledInstance(jLabel11.getHeight(), jLabel11.getWidth(), java.awt.Image.SCALE_SMOOTH)));
                editMenu1.setEnabled(true);
                String imgsavepath=imgoutpath.getText();
                String name=imgName.getText();
                String ext = name.substring(name.lastIndexOf(".")+1).toLowerCase();
                String name1=name.substring(0,name.lastIndexOf("."));
                System.out.println(name1);
    //            File f1=new File(imgsavepath);
                File f1=new File(imgsavepath);
                if(/*!ext.equals("png") &&*/ !ext.equals("bmp") &&   !ext.equals("dib")) {
                    ext = "png";               
                    f1= new java.io.File(imgsavepath+"/"+name1+".png");
                }
    //            System.out.println("output pr aa gya");
    //            if(!ext.equals("bmp") &&   !ext.equals("dib")) {
    //                ext = "png";               
    //                System.out.println("in iffff");
                   // f1= new java.io.File(imgsavepath+"\\"+name1+".png");
    //                System.out.println("end of iffff");
    //            }
                try {
                    if(f1.exists()) f1.delete();
                    ImageIO.write(img1, ext.toUpperCase(), f1);
                } catch(Exception ex) {
                    System.out.println("exception caught in MainScreen.java line 550");
                    
                }
            }
        }
        catch(Exception e){
            System.out.println("exception caught in MainScreen.java line 555");
        }
        
    }//GEN-LAST:event_ButtonEncodeActionPerformed

    private void buttonDecodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDecodeActionPerformed
         try {
             String pathofImage=txtFldFile.getText();
             File f2=new File(pathofImage);
             BufferedImage srcimg=null;
             srcimg=ImageIO.read(f2);
             String data=new SteganoApp().retrieveText(srcimg);
             txtAreainfo.setText(data);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_buttonDecodeActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        try {
            File f=new File(txtfldchooseimg.getText());
            String name=imgName.getText();
            String name1=name.substring(0,name.lastIndexOf("."));
            String path1=imgoutpath.getText()+"\\"+name1+".png";
            //JOptionPane.showMessageDialog(null, path1);
            File f1=new File(imgoutpath.getText()+"\\"+name1+".png");
            BufferedImage b1=null;
            BufferedImage b2=null;
            b1=ImageIO.read(f);
            b2=ImageIO.read(f1);
            double psnr=new StegPSNR().calculatepsnr(b1, b2);
            JOptionPane.showMessageDialog(null, "psnr is="+psnr);
        } catch (Exception e) {
        }
        
//        JFrame jf=new JFrame();
//        JPanel jp=new JPanel(null);
//        ImageIcon c=new ImageIcon(b1);
//        JLabel jl=new JLabel(c);
//        jp.add(jl);
//        jf.setLayout(null);
//        jf.add(jp);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:
        try{
        File f=new File(txtfldchooseimg.getText());
        BufferedImage b1=ImageIO.read(f);
        int len= b1.getHeight()*b1.getWidth();
        int size=len/1024;
        JOptionPane.showMessageDialog(null, "max char length is:"+len+"\nSize(in KB):"+size);
        }
        catch(Exception e){
            System.out.println(e);
        }
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void txtFldFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFldFileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFldFileActionPerformed

    /*
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         *//*
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainScreen().setVisible(true);
            }
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonEncode;
    private javax.swing.JButton ImgChoose;
    private javax.swing.JButton ImgChoose1;
    private javax.swing.JPanel PanelDecode;
    private javax.swing.JPanel PanelEncode;
    private javax.swing.JButton buttonDecode;
    private javax.swing.JMenu editMenu1;
    private javax.swing.JLabel height;
    private javax.swing.JLabel imgName;
    private javax.swing.JTextField imgoutpath;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JLabel lblPic;
    private javax.swing.JLabel size;
    private javax.swing.JTextArea txtAreaData;
    private javax.swing.JTextArea txtAreainfo;
    private javax.swing.JTextField txtFldFile;
    private javax.swing.JButton txtfilechooser;
    private javax.swing.JTextField txtfldchooseimg;
    private javax.swing.JLabel width;
    // End of variables declaration//GEN-END:variables
}
